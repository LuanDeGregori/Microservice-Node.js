swagger: '2.0'
info:
  description: 'Esta API faz o cadastro, consulta, alteração e exclusão de Lojas.'
  version: 1.0.0
  title: Desafio MicroService NodeJs
  contact:
    name: Luan de Gregori
    email: luan.gregori@compasso.com.br
host: 'localhost:3000'
basePath: /cadastro
tags:
  - name: microservice-api-node
    description: MicroService NodeJs
paths:
  /cadastro:
    post:
      tags:
        - microservice-api-node
      summary: Cadastra uma nova loja
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: nome
          type: string
          required: true
        - in: path
          name: endereco
          type: string
          required: true
        - in: path
          name: telefone
          type: integer
          format: int64
          required: true
        - in: path
          name: cnpj
          type: integer
          format: int64
          required: true
        - in: path
          name: horarioAtendimento
          type: string
          required: true
        - in: path
          name: cidade
          type: string
          required: true
        - in: path
          name: estado
          type: string
          required: true
      responses:
        '200':
          description: OK
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Loja'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/lojas/{id}':
    put:
      tags:
        - microservice-api-node
      summary: Edita a loja usando o ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: path
          name: endereco
          type: string
          required: true
        - in: path
          name: telefone
          type: integer
          format: int64
          required: true
        - in: path
          name: cnpj
          type: integer
          format: int64
          required: true
        - in: path
          name: horarioAtendimento
          type: string
          required: true
        - in: path
          name: cidade
          type: string
          required: true
        - in: path
          name: estado
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Loja'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - microservice-api-node
      summary: Remover loja usando ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/lojas/buscaId/{id}':
    get:
      tags:
        - microservice-api-node
      summary: Pesquisa por ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Loja'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/lojas/buscaEstado/{estado}':
    get:
      tags:
        - microservice-api-node
      summary: Pesquisa por estado
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: estado
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Loja'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Loja:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      nome:
        type: string
        example: Loja A
      endereco:
        type: string
        example: Rua Abc, 000
      telefone:
        type: number
        format: int64
        example: 00 1111 2222
      cnpj:
        type: number
        format: int64
        example: 00 111 222 3333 44
      horarioAtendimento:
        type: string
        example: Diariamente das 11hs às 23hs
      cidade:
        type: string
        example: Cidade ABC
      estado:
        type: string
        example: RS
      
